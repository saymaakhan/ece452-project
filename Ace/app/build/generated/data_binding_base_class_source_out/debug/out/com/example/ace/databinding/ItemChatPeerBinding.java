// Generated by view binder compiler. Do not edit!
package com.example.ace.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ace.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemChatPeerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardChatMessagePeer;

  @NonNull
  public final LinearLayout layoutChatContainerPeer;

  @NonNull
  public final TextView textChatMessagePeer;

  @NonNull
  public final TextView textChatTimestampPeer;

  @NonNull
  public final TextView textChatUserPeer;

  private ItemChatPeerBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView cardChatMessagePeer, @NonNull LinearLayout layoutChatContainerPeer,
      @NonNull TextView textChatMessagePeer, @NonNull TextView textChatTimestampPeer,
      @NonNull TextView textChatUserPeer) {
    this.rootView = rootView;
    this.cardChatMessagePeer = cardChatMessagePeer;
    this.layoutChatContainerPeer = layoutChatContainerPeer;
    this.textChatMessagePeer = textChatMessagePeer;
    this.textChatTimestampPeer = textChatTimestampPeer;
    this.textChatUserPeer = textChatUserPeer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemChatPeerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemChatPeerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_chat_peer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemChatPeerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_chat_message_peer;
      CardView cardChatMessagePeer = ViewBindings.findChildViewById(rootView, id);
      if (cardChatMessagePeer == null) {
        break missingId;
      }

      id = R.id.layout_chat_container_peer;
      LinearLayout layoutChatContainerPeer = ViewBindings.findChildViewById(rootView, id);
      if (layoutChatContainerPeer == null) {
        break missingId;
      }

      id = R.id.text_chat_message_peer;
      TextView textChatMessagePeer = ViewBindings.findChildViewById(rootView, id);
      if (textChatMessagePeer == null) {
        break missingId;
      }

      id = R.id.text_chat_timestamp_peer;
      TextView textChatTimestampPeer = ViewBindings.findChildViewById(rootView, id);
      if (textChatTimestampPeer == null) {
        break missingId;
      }

      id = R.id.text_chat_user_peer;
      TextView textChatUserPeer = ViewBindings.findChildViewById(rootView, id);
      if (textChatUserPeer == null) {
        break missingId;
      }

      return new ItemChatPeerBinding((ConstraintLayout) rootView, cardChatMessagePeer,
          layoutChatContainerPeer, textChatMessagePeer, textChatTimestampPeer, textChatUserPeer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
